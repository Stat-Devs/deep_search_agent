#!/usr/bin/env python3
"""
Test script for Christian Marques Rodello lead
Demonstrates the Deep Research System with real lead data.
"""

import os
from dotenv import load_dotenv, find_dotenv

# Load environment variables
load_dotenv(find_dotenv())

def test_christian_lead():
    """Test the system with Christian Marques Rodello lead data."""
    
    print("🎯 Testing Deep Research System with Real Lead")
    print("=" * 60)
    
    # Lead information
    company_name = "Morpho's"
    person_name = "Christian Marques Rodello"
    website_url = "https://morfo.rest"  # Based on email domain
    linkedin_url = "https://www.linkedin.com/in/christian-marques-rodello-67a15b25/"
    
    print(f"Company: {company_name}")
    print(f"Person: {person_name}")
    print(f"Website: {website_url}")
    print(f"LinkedIn: {linkedin_url}")
    print(f"Email: christian@morfo.rest")
    print(f"Phone: 55 31 99295-0675")
    print("-" * 60)
    
    try:
        # Import agents
        from research_agent_website import research_company_website
        from research_agent_linkedin import research_linkedin_profile
        from research_agent_email import generate_email_pitch
        
        print("\n1️⃣ Researching company website...")
        website_research = research_company_website(company_name, website_url)
        print("✅ Website research completed")
        website_text = str(website_research)
        print(f"Results: {len(website_text)} characters")
        
        print("\n2️⃣ Researching LinkedIn profile...")
        # Create sample LinkedIn data based on the URL
        sample_linkedin_data = f"""
        Christian Marques Rodello
        Company: {company_name}
        LinkedIn: {linkedin_url}
        Email: christian@morfo.rest
        Phone: 55 31 99295-0675
        Location: Brazil (based on phone code +55)
        """
        
        linkedin_research = research_linkedin_profile(person_name, company_name, sample_linkedin_data)
        print("✅ LinkedIn research completed")
        linkedin_text = str(linkedin_research)
        print(f"Results: {len(linkedin_text)} characters")
        
        print("\n3️⃣ Generating personalized email pitch...")
        # Extract role from research (default to business contact)
        person_role = "Business Contact"
        if "founder" in linkedin_text.lower() or "ceo" in linkedin_text.lower():
            person_role = "Founder/CEO"
        elif "manager" in linkedin_text.lower():
            person_role = "Manager"
        
        email_pitch = generate_email_pitch(
            person_name, 
            company_name, 
            person_role,
            website_text,
            linkedin_text
        )
        print("✅ Email pitch generated")
        email_text = str(email_pitch)
        print(f"Results: {len(email_text)} characters")
        
        # Compile final report
        print("\n4️⃣ Compiling comprehensive research report...")
        final_report = f"""
# 🎯 LEAD RESEARCH REPORT: {company_name.upper()}

## 📊 Company Intelligence
{website_text}

## 👤 Contact Person: {person_name}
**Role:** {person_role}
**Email:** christian@morfo.rest
**Phone:** 55 31 99295-0675
**LinkedIn:** {linkedin_url}

{linkedin_text}

## 📧 Personalized Email Pitch
{email_text}

## 🚀 Next Steps
1. **Review and customize** the email pitch
2. **Send the email** to christian@morfo.rest
3. **Follow up** within 3-5 business days
4. **Prepare for discovery call** with specific case studies

## 💡 Key Insights
- Company appears to be a good fit for data analytics services
- {person_name} has decision-making influence in the organization
- Personalized approach based on company needs and person's role
- Focus on value proposition and business outcomes

## 🌍 Geographic Context
- **Country:** Brazil
- **Phone Code:** +55
- **Region:** Southeast Brazil (area code 31)
- **Language:** Portuguese (consider bilingual approach)

---
*Report generated by Deep Research System - {os.path.basename(__file__)}*
"""
        
        print("✅ Research report compiled")
        
        # Display results
        print("\n" + "=" * 60)
        print("📋 COMPLETE RESEARCH REPORT")
        print("=" * 60)
        print(final_report)
        
        # Save report to file
        filename = f"lead_research_{company_name.replace(' ', '_')}_{person_name.replace(' ', '_')}.md"
        with open(filename, 'w') as f:
            f.write(final_report)
        
        print(f"\n💾 Research report saved to: {filename}")
        
        return {
            'website_research': website_text,
            'linkedin_research': linkedin_text,
            'email_pitch': email_text,
            'final_report': final_report
        }
        
    except Exception as e:
        print(f"❌ Error during research: {str(e)}")
        import traceback
        traceback.print_exc()
        return None

def main():
    """Main function to run the Christian lead test."""
    print("🚀 Deep Research System - Christian Marques Rodello Lead Test")
    print("=" * 80)
    
    results = test_christian_lead()
    
    if results:
        print("\n🎉 Test completed successfully!")
        print("\n📊 Summary:")
        print(f"- Website Research: {len(results['website_research'])} characters")
        print(f"- LinkedIn Research: {len(results['linkedin_research'])} characters")
        print(f"- Email Pitch: {len(results['email_pitch'])} characters")
        print(f"- Total Report: {len(results['final_report'])} characters")
    else:
        print("\n❌ Test failed. Check the error messages above.")

if __name__ == "__main__":
    main()
